{"remainingRequest":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/alivehal/Documents/tuts/portl-bot/node_modules/aws-sdk/lib/event-stream/event-message-chunker.js","dependencies":[{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/aws-sdk/lib/event-stream/event-message-chunker.js","mtime":1530225552000},{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/cache-loader/dist/cjs.js","mtime":1539041930837},{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};",null]}