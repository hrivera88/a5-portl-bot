{"remainingRequest":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/alivehal/Documents/tuts/portl-bot/node_modules/aws-sdk/lib/dynamodb/set.js","dependencies":[{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/aws-sdk/lib/dynamodb/set.js","mtime":1530225552000},{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/cache-loader/dist/cjs.js","mtime":1539041930837},{"path":"/Users/alivehal/Documents/tuts/portl-bot/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var util = require('../core').util;\nvar typeOf = require('./types').typeOf;\n\n/**\n * @api private\n */\nvar memberTypeToSetType = {\n  'String': 'String',\n  'Number': 'Number',\n  'NumberValue': 'Number',\n  'Binary': 'Binary'\n};\n\n/**\n * @api private\n */\nvar DynamoDBSet = util.inherit({\n\n  constructor: function Set(list, options) {\n    options = options || {};\n    this.wrapperName = 'Set';\n    this.initialize(list, options.validate);\n  },\n\n  initialize: function(list, validate) {\n    var self = this;\n    self.values = [].concat(list);\n    self.detectType();\n    if (validate) {\n      self.validate();\n    }\n  },\n\n  detectType: function() {\n    this.type = memberTypeToSetType[typeOf(this.values[0])];\n    if (!this.type) {\n      throw util.error(new Error(), {\n        code: 'InvalidSetType',\n        message: 'Sets can contain string, number, or binary values'\n      });\n    }\n  },\n\n  validate: function() {\n    var self = this;\n    var length = self.values.length;\n    var values = self.values;\n    for (var i = 0; i < length; i++) {\n      if (memberTypeToSetType[typeOf(values[i])] !== self.type) {\n        throw util.error(new Error(), {\n          code: 'InvalidType',\n          message: self.type + ' Set contains ' + typeOf(values[i]) + ' value'\n        });\n      }\n    }\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = DynamoDBSet;\n",null]}